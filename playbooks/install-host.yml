---
- name: Install compute host
  hosts: all
  gather_facts: yes
  vars_files:
    - vars/all.yml
  vars:
    selinux_state: permissive
    vol_pool_name: images
    vol_pool_path: /var/lib/libvirt/images
    subnet: "192.168.122.0/24"
  environment: "{{ proxy_env | default(omit)}}"
  tasks:
    - name: Check selinux existence
      shell: which getenforce
      register: selinux_check
      failed_when: false
      changed_when: false
      tags: selinux

    - name: Set selinux policy
      selinux:
        policy: targeted
        state: "{{ selinux_state }}"
      when: selinux_check.rc == 0
      tags: selinux

    - name: Check firewalld existence
      shell: which firewall-cmd
      register: firewalld_check
      failed_when: false
      changed_when: false
      tags: firewalld

    - name: Disable firewalld
      service:
        name: firewalld
        state: stopped
        enabled: no
      when: firewalld_check.rc == 0
      tags: firewalld

    - name: apt update
      apt:
        update_cache: true
      tags: install_libvirt
      when: ansible_os_family == "Debian"

    - name: Install libvirt and dependencies
      package:
        name: "{{ libvirt.dependencies[ansible_os_family|lower] }}"
        state: present
      tags: install_libvirt

    - name: Destroy default network
      command: virsh net-destroy default
      tags: install_libvirt
      when: ansible_os_family == "Debian"

    - name: Stop libvirt service
      service:
        name: "{{ item }}"
        enabled: yes
        state: stopped
      with_items:
        - libvirtd
      tags: install_libvirt
      when: ansible_os_family == "Debian"

    - name: Add post action for libvirtd service to insert iptables rule
      blockinfile:
        dest: /lib/systemd/system/libvirtd.service
        insertafter: "^ExecStart="
        block: |
          ExecStartPost=/bin/sh -c "until virsh connect; do echo 'wait...';sleep 1; done"
          ExecStartPost=/bin/sh -c "iptables -D FORWARD -o virbr0 -m conntrack --ctstate NEW -j ACCEPT || true"
          ExecStartPost=/bin/sh -c "iptables -I FORWARD -o virbr0 -m conntrack --ctstate NEW -j ACCEPT"
      tags: install_libvirt

    - name: Override default network.xml
      template:
        src: default.xml.j2
        dest: /etc/libvirt/qemu/networks/default.xml
      tags: install_libvirt

    - name: Start libvirt service
      service:
        name: "{{ item }}"
        enabled: yes
        state: restarted
        daemon_reload: yes
      with_items:
        - libvirtd
      tags: install_libvirt

    - name: Download virt-utils
      unarchive:
        src: "{{ virt_utils.release }}"
        dest: /var/lib/libvirt/images
        remote_src: yes
        exclude:
          - Makefile
          - LICENSE
          - README.md
          - .gitignore
        list_files: true
      register: download_result
      tags: virt_utils

    - name: Copy virt-utils scripts to /var/lib/libvirt/images
      shell: /bin/cp -f {{ download_result.files[0] }}virt-* -f {{ download_result.files[0] }}create-config-drive .
      args:
        chdir: /var/lib/libvirt/images
      tags: virt_utils

    - name: Install virt-utils, by making soft link
      shell: >
        find . -maxdepth 1 -type f -executable \
        | awk -F'/' '{print "ln -sf /var/lib/libvirt/images/"$2" /usr/local/bin/"$2}' | sh -
      args:
        chdir: /var/lib/libvirt/images
      tags: virt_utils

    - name: Check vol_pool existence
      shell: virsh pool-list --all | grep " {{ vol_pool_name }} " || true
      register: vol_pool_check
      changed_when: false
      tags: vol_pool

    - name: Define vol pool
      shell: virsh pool-define-as --name {{ vol_pool_name }} --type dir --target {{ vol_pool_path }}
      when: not vol_pool_check.stdout
      register: define_vol_pool
      tags: vol_pool

    - name: Mark vol pool autostart
      shell: virsh pool-autostart {{ vol_pool_name }}
      when: define_vol_pool.changed or (vol_pool_check.stdout and 'yes' not in vol_pool_check.stdout)
      tags: vol_pool

    - name: Active vol pool
      shell: virsh pool-start {{ vol_pool_name }}
      when: define_vol_pool.changed or (vol_pool_check.stdout and ' active' not in vol_pool_check.stdout)
      tags: vol_pool

    - name: Generate ssh key
      openssh_keypair:
        path: /root/.ssh/id_rsa
      tags: ssh_key

    - name: Download base image
      get_url:
        url: "{{ libvirt.base_image[item]['download_url'] }}"
        dest: /var/lib/libvirt/images
      with_items: "{{ libvirt.base_image.keys() | list }}"
      tags: download_image

    - name: Restart libvirt service to get the new added images
      service:
        name: libvirtd
        state: restarted
      tags: download_image

    - name: Print total memory size
      debug:
        msg: "{{ ansible_memtotal_mb }}"
      tags: info, memory

    - name: Print total cpu count
      debug:
        msg: "{{ ansible_processor_count }}"
      tags: info, cpu

    - name: Print os type
      debug:
        msg: "{{ ansible_distribution }}"
      tags: info, type

    - name: Get virt vol disk usage
      shell: df -m --output=size /var/lib/libvirt/images/ | tail -1
      register: disk_usage
      tags: info, disk

    - name: Print virt vol disk usage
      debug:
        msg: "{{ disk_usage.stdout | trim | int}}"
      tags: info, disk
